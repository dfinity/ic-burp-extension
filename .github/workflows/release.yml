name: Release

# on:
#   push:
#     tags:
#       - release/*

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build-macos:
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ./rust-lib
    steps:
      - uses: actions/checkout@v4
      - name: Install rust targets
        run: rustup target install x86_64-apple-darwin && rustup target install aarch64-apple-darwin
      - name: Clean environment
        run: cargo clean
      - name: Build rust OSX Intel lib
        run: cargo build --release --target x86_64-apple-darwin
      - name: Build rust OSX ARM lib
        run: cargo build --release --target aarch64-apple-darwin
      - name: Create rust OSX universal lib
        run: lipo -create -output librust_lib.dylib target/x86_64-apple-darwin/release/librust_lib.dylib target/aarch64-apple-darwin/release/librust_lib.dylib
      - name: Upload rust OSX universal lib
        uses: actions/upload-artifact@v4
        with:
          name: librust_lib.dylib
          path: ./rust-lib/librust_lib.dylib
  build-ubuntu:
    runs-on: ubuntu-latest
    needs: [build-macos]
    defaults:
      run:
        working-directory: ./rust-lib
    steps:
      - uses: actions/checkout@v4
      - name: Install rust targets
        run: rustup target install x86_64-unknown-linux-gnu
      - name: Clean environment
        run: cargo clean
      - name: Build rust linux lib
        run: cargo build --release --target x86_64-unknown-linux-gnu
      - name: Copy rust linux lib to java resources
        run: cp target/x86_64-unknown-linux-gnu/release/librust_lib.so ../java-extension/src/main/resources/
      - name: Download rust OSX universal lib
        uses: actions/download-artifact@v4
        with:
          name: librust_lib.dylib
          path: ./java-extension/src/main/resources/
      - name: dbg ls
        working-directory: ./java-extension
        run: ls -la ./src/main/resources/
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Remove SNAPSHOT from version string
        working-directory: ./java-extension
        run: sed -i "s|-SNAPSHOT||g" ./build.gradle.kts
      - name: Build jar
        working-directory: ./java-extension
        run: ./gradlew clean jar
      - name: Get version from tag
        id: get_version
        run: echo "version=0.2" >> $GITHUB_OUTPUT #$(echo $GITHUB_REF | cut -d / -f 4) TODO: replace hardcoded version
      - name: Check version
        working-directory: ./java-extension
        run: test -f build/libs/ic-burp-extension-${{ steps.get_version.outputs.version }}.jar
