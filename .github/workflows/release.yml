name: Release

# on:
#   push:
#     tags:
#       - release/*

on:
  pull_request:
    branches: [ "main" ]

jobs:
  # build-lib-macos:
  #   runs-on: macos-latest
  #   defaults:
  #     run:
  #       working-directory: ./rust-lib
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Install rust targets
  #       run: rustup target install x86_64-apple-darwin && rustup target install aarch64-apple-darwin
  #     - name: Clean environment
  #       run: cargo clean
  #     - name: Build rust macos Intel lib
  #       run: cargo build --release --target x86_64-apple-darwin
  #     - name: Build rust macos ARM lib
  #       run: cargo build --release --target aarch64-apple-darwin
  #     - name: Create rust macos universal lib
  #       run: lipo -create -output librust_lib.dylib target/x86_64-apple-darwin/release/librust_lib.dylib target/aarch64-apple-darwin/release/librust_lib.dylib
  #     - name: Upload rust macos universal lib
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: librust_lib.dylib
  #         path: ./rust-lib/librust_lib.dylib

  # build-lib-ubuntu:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./rust-lib
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Install rust targets
  #       run: rustup target install x86_64-unknown-linux-gnu
  #     - name: Clean environment
  #       run: cargo clean
  #     - name: Build rust linux lib
  #       run: cargo build --release --target x86_64-unknown-linux-gnu
  #     - name: Upload rust linux lib
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: librust_lib.so
  #         path: ./rust-lib/target/x86_64-unknown-linux-gnu/release/librust_lib.so

  build-java-publish:
    permissions:
      contents: write # needed for creating a release
    runs-on: ubuntu-latest
    # needs: [build-lib-macos, build-lib-ubuntu]
    defaults:
      run:
        working-directory: ./java-extension
    steps:
      - uses: actions/checkout@v4
      # - name: Download rust macos universal lib
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: librust_lib.dylib
      #     path: ./java-extension/src/main/resources/
      # - name: Download rust linux lib
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: librust_lib.so
      #     path: ./java-extension/src/main/resources/
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Remove SNAPSHOT from version string
        run: sed -i "s|-SNAPSHOT||g" ./build.gradle.kts
      - name: Build jar
        run: ./gradlew clean jar
      - name: Get version from tag
        id: get_version
        run: echo "version=0.1" >> $GITHUB_OUTPUT #$(echo $GITHUB_REF | cut -d / -f 4) TODO: replace hardcoded version
      - name: Check version
        run: test -f build/libs/ic-burp-extension-${{ steps.get_version.outputs.version }}.jar
      - name: Create release # TODO: replace create $GITHUB_REF_NAME and add --verify-tag \
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release create "test/0.1" --repo="dfinity/ic-burp-extension" --title="v0.1" --generate-notes ./build/libs/ic-burp-extension-0.1.jar
